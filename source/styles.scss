// Setup - start
@use "sass:color";
@use "sass:list";

$colour-primary: #292929;
$colour-secondary: #dddddd;
$colour-highlight: #af0502;
$colour-debug: green;

$padding__standard: 2rem;
$padding__thin: calc($padding__standard / 2);

$margin__standard: $padding__standard;
$margin__thin: calc($margin__standard / 2);

@mixin reset-img {
	display: block;
	max-width: 100%;
	max-height: 100%;
	margin: auto;
}

// Takes a number of columns and optionally their widths
@mixin single-row-grid($number-of-columns, $column-widths: (auto)) {
	$columns: "";
	@if (
		// Check to make sure there is a width for each column
		list.length($column-widths) !=
			($number-of-columns) and
			list.length($column-widths) !=
			1
	) {
		@error "Must be as many column widths as number of columns";
	} @else if (list.length($column-widths) == 1) {
		@for $i from 1 through $number-of-columns {
			$columns: #{$columns} #{$column-widths};
		}
	} @else {
		@for $i from 1 through $number-of-columns {
			$columns: #{$columns} #{list.nth($column-widths, $i)};
		}
	}
	display: grid;
	@debug "columns: #{$columns}";
	grid-template-columns: $columns;
	grid-template-rows: 100%; // Stops child elements from breaking bounds
}
// Setup and definitions - end

/* General stylings and helper classes - start */
* {
	box-sizing: border-box;
	font-family: "PT Serif", serif;
	border: 2px solid $colour-debug; // Debug borders
}

body {
	/* Setup grid to allow side bars */
	display: grid;
	grid: 15vh auto / 1fr 10fr 1fr;
	grid-template-areas: "header header header" "side-bars__left main side-bars__right";
}

/* Standardise images to aid formatting */
.img-container {
	display: flex;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	max-height: 100%;

	img {
		@include reset-img;
	}
}

.polaroid {
	/* Polaroid is 3.5" x 4.2"
	3.5 : 4.2 = 5 : 6 */
	aspect-ratio: 5 / 6;
	display: grid;
	/* Border around photo 0.2"
	Photo is 3.1"
	Leaving 0.7" at the bottom for caption (not including the bottom photo border)
	Turning these into fractions of width/height whilst keeping the resulting
	absolute values equal results in the following abbomination - I'm sorry
	2/42 + 31/42 + 2/42 + 7/42 = 42/42-> Rows = height = 4.2" = 42units
	2/35 + 31/35 + 2/35 = 35/35 -> Columns = widths = 3.5" = 35units
	42 * 35 = 1470
	70/1470 + 1085/1470 + 70/1470 + 245/1470 = 1470/1470  -> Rows
	84/1470  + 1302/1470 + 84/1470 = 1470/1470 -> Columns
	 */
	grid-template-rows: 70fr 1085fr 70fr 245fr;
	grid-template-columns: 84fr 1302fr 84fr;
	grid-template-areas: "padding__top padding__top padding__top" "padding__left photo padding__right" "padding__bottom padding__bottom padding__bottom" "caption caption caption";
	background-color: whitesmoke;

	box-shadow: 0 0.3rem 1rem rgba(0, 0, 0, 0.5);

	// position: fixed;
	// top: 20vh;
	// right: 20vw;

	border: 2px solid $colour-debug;
	width: 500px;

	.polaroid__hover-target {
		position: absolute;
		$size-increase: 10%;
		width: calc(100% + $size-increase);
		height: calc(100% + $size-increase);
		top: -#{calc($size-increase / 2)};
		left: -#{calc($size-increase / 2)};
		opacity: 0;
	}

	.polaroid__photo {
		grid-area: photo;
		display: flex;
		justify-content: center;
		align-items: center;
		overflow: hidden;

		img {
			filter: sepia(25%);
			height: 100%;
			object-fit: cover;
		}
	}

	.polaroid__caption {
		grid-area: caption;
		padding-left: $padding__thin;
		padding-right: $padding__thin;
		padding-bottom: $padding__thin;
		padding-top: 0;

		p {
			margin-block: 0 0;
			text-align: justify;
			font-size: x-small;
			font-family: "Permanent Marker", cursive;
			color: black;
		}
	}
}
/* General stylings and helper classes - end */

/* Header stuff - start */
header {
	z-index: 100;
	position: -webkit-sticky;
	position: sticky;
	top: 0;
	border-bottom: 0.44rem solid $colour-highlight;
	border-radius: 0 0 1rem 1rem;
	box-shadow: 0 0.3rem 1rem rgba(0, 0, 0, 0.5);

	grid-area: header;
	background-color: $colour-secondary;
	@include single-row-grid(3, 2fr 1fr 2fr);

	.header__item {
		padding: 0 $padding__standard;
	}

	/* Main logo */
	.fools-logo {
		grid-column: 2;

		img {
			padding: calc($padding__thin/2) 0;
		}
	}

	nav {
		grid-column: 3;
	}

	/* Outer nav element */
	.nav {
		padding: 0 $padding__thin;
		@include single-row-grid(1);
	}

	/* Inner ul element */
	.navigation-list {
		grid-column: 1;
		width: 100%;
		padding-inline-start: 0;

		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		align-items: center;

		li {
			display: inline-block;

			a {
				font-variant: small-caps;
				font-weight: 800;
				font-size: 2rem;
				text-decoration: none;
				color: $colour-highlight;

				&:hover {
					color: color.adjust($colour-highlight, $saturation: -30%);
				}
			}
		}
	}
}

/* Social media links container */
.socials {
	grid-column: 1;
	@include single-row-grid(3);

	a {
		margin: 15% $margin__thin;
	}

	div {
		margin: 15% $margin__thin;
	}
}
/* Header stuff - end */

/* Side bars - start */
.side-bars {
	background-color: $colour-secondary;
}

#side-bars__left {
	grid-area: side-bars__left;
}

#side-bars__right {
	grid-area: side-bars__right;
}
/* Side bars - end */

@mixin flow-container {
	display: flex;
	flex-flow: row wrap;
	gap: $margin__thin;
	margin-bottom: $margin__standard;
}

main {
	background-color: $colour-primary;
	color: $colour-secondary;
	grid-area: main;
	grid-column: 2;
	padding: $padding__standard;

	> section {
		padding-bottom: 1rem;
		border-bottom: 0.1rem solid $colour-highlight;
		margin-bottom: 2rem;
	}
}

.home-section {
	> div {
		@include flow-container();
	}

	.home-section__title {
		font-size: 3rem;
		font-weight: bold;
		text-align: center;
		margin-block-start: 0;
	}

	.home-section__text {
		font-size: x-large;
		flex: 1 1 20rem;

		> p {
			margin-block-start: 0;
		}
	}

	.home-section__photo {
		flex-basis: 20rem;
		flex: 1 1 20rem;
		min-width: 250px;
		overflow: hidden;

		> img {
			border-radius: 3rem;
		}
	}
}

.about-section {
	> div {
		@include flow-container();
		gap: 2.5%;
		padding-top: 1rem;

		&:nth-child(2n) {
			flex-wrap: wrap-reverse;
		}
	}

	// display: grid;
	// grid: auto auto auto auto / 3fr 2fr;
	// grid-template-areas: "title-1 title-1" "text-1 media-1" "title-2 title-2" "text-2 media-2";
	// margin-bottom: $margin__standard;
	// gap: $margin__thin;

	.about-section__text {
		flex: 2 1 60%;

		.text__title {
			margin-block-start: 0;
			text-align: center;
		}

		.text__body {
			text-align: justify;
			font-size: large;

			> p {
				margin-block-start: 0;
			}
		}
	}

	.about-section__media {
		flex: 1 1 37.5%;
		min-width: 250px;
		overflow: hidden;
		position: relative;

		> * {
			border-radius: 3rem;
			width: 100%;
		}
	}

	#about-section__title-1 {
		// grid-area: title-1;
	}

	#about-section__text-1 {
	}

	#about-section__title-2 {
	}

	#about-section__text-2 {
		// grid-area: text-2;
	}

	#about-section__media-1 {
		aspect-ratio: 1 / 1;
		overflow: visible;
		.polaroid {
			border-radius: 0;
			position: absolute;
			width: 40%;
			transition: all 0.35s;
			transition-delay: 0.1s;

			img {
				filter: sepia(25%);
				transition-property: filter;
				transition-duration: 0.35s;
			}

			&:hover {
				top: 17.5%;
				left: 30%;
				z-index: 5;
				transform: scale(1.5) rotate(0deg) !important;
				transition: all 0.35s;
				// transition-delay: 0.1;

				img {
					filter: none;
					transition-property: filter;
					transition-duration: 0.35s;
				}
			}
		}

		& > :nth-child(1) {
			top: 5%;
			left: 20%;
			z-index: 3;
			transform: rotate(-15deg);
			.polaroid__caption > p {
				rotate: #{calc(random($limit: 20) - 10)}deg;
			}
		}

		& > :nth-child(2) {
			top: 10%;
			left: 52%;
			transform: rotate(-5deg);
			z-index: 1;
			.polaroid__caption > p {
				rotate: #{calc(random($limit: 20) - 10)}deg;
			}
		}

		& > :nth-child(3) {
			top: 40%;
			left: 35%;
			z-index: 2;
			transform: rotate(5deg);
			.polaroid__caption > p {
				rotate: #{calc(random($limit: 20) - 10)}deg;
			}
		}
	}

	#about-section__media-2 {
		// grid-area: media-2;
	}
}

.gallery-section {
	height: 800px;
	.gallery__carousel {
		width: 100%;
		height: 100%;
		margin: 0;
		overflow: hidden;
		position: relative;

		.carousel__slides {
			width: 100%;
			height: 100%;
			display: flex;
			position: relative;
			align-items: center;

			margin-block: 0;
			padding-inline: 0;

			.slides__slide {
				flex: 0 40%;
				display: block;
				z-index: 1;
				visibility: hidden;
				// border: 2px solid white;
				// background-color: $colour-secondary;
				aspect-ratio: 16 / 9;

				will-change: transform;
			}

			@mixin transition-thing {
				transition: all 1s ease-in-out;
			}

			.slide__staged-left {
				visibility: hidden;
				position: absolute;
				width: 40%;
				left: -40%;
				@include transition-thing;
			}

			.slide__prev {
				visibility: visible;
				z-index: 2;
				position: absolute;
				left: -20%;
				width: 40%;
				@include transition-thing;
			}

			.slide__current {
				visibility: visible;
				z-index: 3;
				width: 60%;
				position: absolute;
				left: 20%;
				@include transition-thing;

				&:hover {
					cursor: zoom-in;
				}
			}

			.slide__current--clicked {
				z-index: 5;
				width: 100%;
				position: absolute;
				left: 0;
				@include transition-thing;

				&:hover {
					cursor: zoom-out;
				}
			}

			.slide__next {
				visibility: visible;
				z-index: 2;
				position: absolute;
				left: 80%;
				width: 40%;
				@include transition-thing;
			}

			.slide__staged-right {
				visibility: hidden;
				position: absolute;
				left: 100%;
				width: 40%;
				@include transition-thing;
			}
		}

		@mixin carousel-buttons {
			z-index: 4;
			position: absolute;
			height: 100%;
			width: 20%;
			top: 0;
			background-color: rgba(0, 0, 0, 0);
			cursor: pointer;
			padding: $padding__standard;
			border: unset;
		}
		.carousel__prev {
			@include carousel-buttons();
			left: 0;
		}

		.carousel__next {
			@include carousel-buttons();
			right: 0;
		}
	}
}
